<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
		
<global-method-security pre-post-annotations="enabled" />

<http use-expressions="true">

<!-- 
	<intercept-url pattern="/admin/**" access="isAuthenticated()" />
	<intercept-url pattern="/admin/users**" access="hasRole('ROLE_ADMIN')"/>		
	<intercept-url pattern="/admin/users/**" access="hasRole('ROLE_ADMIN')"/>
-->
		
		
	<intercept-url pattern="/users**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SADMIN')" />
	<intercept-url pattern="/users/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SADMIN')" />
	<intercept-url pattern="/account**" access="hasRole('ROLE_USER')" />
	<form-login login-page="/login.html" />
	<logout logout-url="/logout" />
	<csrf disabled="true"/>
</http>

<authentication-manager>
<authentication-provider>
	<password-encoder  hash="bcrypt" />
	<jdbc-user-service data-source-ref="dataSource"
		authorities-by-username-query="select User.username, Role.name from User
									join userHasRole on User.id = userHasRole.userId
									join Role on userHasRole.roleId = Role.id
									where User.username = ?"
		users-by-username-query="select username, password, enabled from User where username = ?"/>
<!-- 	<user-service> -->
<!-- 	<user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" /> -->
<!-- 	</user-service> -->
</authentication-provider>
</authentication-manager>
</beans:beans>

<!-- spring security reference, Common built-in expressions : -->
<!-- http://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#el-common-built-in -->
